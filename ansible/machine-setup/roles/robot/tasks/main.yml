---
- name: Install apps package (apt, yum, etc..) Ubuntu
  package: name={{ item }} state=present
  with_items:
    - git
    - python-pip
    - build-essential
    - firefox
  when: ansible_distribution == 'Ubuntu'

- name: Install apps package (apt, yum, etc..) CentOS
  package: name={{ item }} state=present
  with_items:
    - git
    - epel-release # needed to install python-pip on CentOS
    - python-pip
    - "@Development tools"
    - firefox
  when: ansible_distribution == 'CentOS'
  
- name: Install apps package (apt, yum, etc..) Fedora
  package: name={{ item }} state=present
  with_items:
    - git
    - python-pip
    - "@Development tools"
    - firefox
    - libselinux-python  # needed to download geckodriver on Fedora
  when: ansible_distribution == 'Fedora'
  
- name: Install pip packages 
  pip: 
    name={{ item }} 
    state=present
  with_items:
    - robotframework
    - robotframework-sshlibrary
    - robotframework-seriallibrary
    - robotframework-sikulilibrary
    - robotframework-seleniumlibrary
    - robotframework-ftplibrary
    - robotframework-snmplibrary
    - robotframework-selenium2library
    - Selenium2LibraryExtension
    - pyyaml
    - nclib
    - gecko
    - selenium

- name: Verify if gecko driver already exists
  stat: path="/tmp/geckodriver-v{{ gecko_version }}-linux64.tar.gz"
  register: hasGecko

- name: Verify if chrome driver already exists
  stat: path="/tmp/chromedriver_linux64.zip"
  register: hasChrome

- name: Download the gecko driver
  get_url: url="https://github.com/mozilla/geckodriver/releases/download/v{{ gecko_version }}/geckodriver-v{{ gecko_version }}-linux64.tar.gz" dest=/tmp mode=0777
  when: not hasGecko.stat.exists

- name: Install the gecko driver
  unarchive: src="/tmp/geckodriver-v{{ gecko_version }}-linux64.tar.gz" dest=/usr/local/bin/ mode=0700 copy=no

- name: Download the chrome driver
  get_url: url="http://chromedriver.storage.googleapis.com/{{ chrome_version }}/chromedriver_linux64.zip" dest=/tmp mode=0777
  when: not hasChrome.stat.exists

- name: Install the chrome driver
  unarchive: src=/tmp/chromedriver_linux64.zip dest=/usr/local/bin/ mode=0700 copy=no

- name: Clone Gitblit RobotFrameworkTests mirror
  become: no
  git:
    repo: git://10.100.8.90/mirrors/RobotFrameworkTests.git
    dest: "{{ user_directory.stdout }}/vertivx/RobotFrameworkTests"
    version: master
