{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;kDAEKC,G,EAAK;AACf,4BAAGA,IAAIC,EAAP,EAAW;AACP,mCAAOD,GAAP;AACH,yBAFD,MAEO;AACH,kCAAM,IAAIE,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACH;AACJ;;;wCAEGC,G,EAAK;AAAA;;AACL,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBADH,EAEFM,IAFE,CAEG;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBAFH,CAAP;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;;yCAEIJ,G,EAAKK,I,EAAM;AAAA;;AAEZ,+BAAOJ,MAAMD,GAAN,EAAY;AACfM,qCAAS,EAAC,gBAAgB,kBAAjB,EADM;AAEfC,oCAAQ,MAFO;AAGfC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHS,yBAAZ,EAKNH,IALM,CAKD;AAAA,mCAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBALC,CAAP;;AAOA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n    _handleErrors(res) {\n        if(res.ok) {\n            return res;\n        } else {\n            throw new Error(res.statusText);\n        }\n    }\n\n    get(url) {\n        return fetch(url)\n            .then(res => this._handleErrors(res))\n            .then(res => res.json());\n        // return new Promise((resolve, reject) => {\n        //     let xhr = new XMLHttpRequest();\n\n        //     xhr.open('GET', url);\n        //     xhr.onreadystatechange = () => {\n        //         if (xhr.readyState == 4) {\n        //             if (xhr.status == 200) {\n        //                 resolve(JSON.parse(xhr.responseText));\n        //             } else {\n        //                 reject(xhr.responseText, null);\n        //             }\n        //         }\n        //     };\n        //     xhr.send();\n        // });\n    }\n\n    post(url, dado) {\n\n        return fetch(url , {\n            headers: {'Content-type': 'application/json'},\n            method: 'post',\n            body: JSON.stringify(dado)\n        })\n        .then(res => this._handleErrors(res));\n\n        // return new Promise((resolve, reject) => {\n        //     let xhr = new XMLHttpRequest();\n        //     xhr.open(\"POST\", url, true);\n        //     xhr.setRequestHeader(\"Content-type\", \"application/json\");\n\n        //     xhr.onreadystatechange = () => {\n        //         if (xhr.readyState == 4) {\n        //             if (xhr.status == 200) {\n        //                 resolve(JSON.parse(xhr.responseText));\n        //             } else {\n        //                 reject(`Não foi possível enviar a negociação: ${xhr.responseText}`);\n        //             }\n        //         }\n        //     }\n        //     xhr.send(JSON.stringify(dado));\n        // });\n    }\n\n}"]}