{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","evento","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAEKC,a;AAET,uCAAYC,UAAZ,EAAwB;AAAA;;AACpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CAEQC,U,EAAY;AAAA;;AACjB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,UAHK,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB,kBAAU;AAC1BN;AACH,6BAFD;;AAIAE,oCAAQK,OAAR,GAAkB,kBAAU;AACxBC,wCAAQC,GAAR,CAAYC,OAAOC,MAAP,CAAcC,KAA1B;AACAX,uCAAO,yCAAP;AACH,6BAHD;AAIH,yBAfM,CAAP;AAgBH;;;4CAEO;AAAA;;AACJ,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKA,gCAAIC,cAAc,EAAlB;;AAEAF,mCAAOP,SAAP,GAAmB,kBAAU;AACzB,oCAAIU,QAAQN,OAAOC,MAAP,CAAcM,MAA1B;;AAEA,oCAAID,KAAJ,EAAW;AACP,wCAAIE,OAAOF,MAAMG,KAAjB;AACAJ,gDAAYK,IAAZ,CAAiB,IAAI3B,UAAJ,CAAeyB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;AACAP,0CAAMQ,QAAN;AACH,iCAJD,MAIO;AACHxB,4CAAQe,WAAR;AACH;AACJ,6BAVD;;AAYAF,mCAAON,OAAP,GAAiB,kBAAU;AACvBC,wCAAQC,GAAR,CAAYC,OAAOC,MAAP,CAAcC,KAA1B;AACAX,uCAAO,wCAAP;AACH,6BAHD;AAIH,yBAzBM,CAAP;AA0BH;;;4CAEO;AAAA;;AACJ,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT4B,KAHS,EAAd;;AAKAvB,oCAAQI,SAAR,GAAoB,kBAAU;AAC1BN,wCAAQ,mCAAR;AACH,6BAFD;;AAIAE,oCAAQK,OAAR,GAAkB,kBAAU;AACxBC,wCAAQC,GAAR,CAAYC,OAAOC,MAAP,CAAcC,KAA1B;AACAX,uCAAO,yCAAP;AACH,6BAHD;AAIH,yBAfM,CAAP;AAgBH","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoDao {\n\n    constructor(connection) {\n        this._connection = connection;\n        this._store = 'negociacoes';\n    }\n\n    adiciona(negociacao) {\n        return new Promise((resolve, reject) => {\n\n            let request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .add(negociacao);\n\n            request.onsuccess = evento => {\n                resolve();\n            };\n\n            request.onerror = evento => {\n                console.log(evento.target.error);\n                reject('Não foi possível adicionar a negociação');\n            };\n        });\n    }\n\n    lista() {\n        return new Promise((resolve, reject) => {\n\n            let cursor = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .openCursor();\n\n            let negociacoes = [];\n\n            cursor.onsuccess = evento => {\n                let atual = evento.target.result;\n\n                if (atual) {\n                    let dado = atual.value;\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\n                    atual.continue();\n                } else {\n                    resolve(negociacoes);\n                }\n            };\n\n            cursor.onerror = evento => {\n                console.log(evento.target.error);\n                reject('Não foi possível listar as negociações');\n            };\n        });\n    }\n\n    apaga() {\n        return new Promise((resolve, reject) => {\n\n            let request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .clear();\n\n            request.onsuccess = evento => {\n                resolve('Negociações removidas com sucesso');\n            };\n\n            request.onerror = evento => {\n                console.log(evento.target.error);\n                reject('Não foi possível remover as negociações');\n            };\n        });\n    }\n}"]}